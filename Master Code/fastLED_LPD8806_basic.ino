/*
    ~ fastLED_LPD8806_basic
    
    Raymond Hruby II / Abdullah Kidwai
    rhruby2 / akidwa2
    CS 362 Arduino Project
    
    References and Code: 
    https://www.sparkfun.com/tutorials/326
    https://www.arduino.cc/en/Reference/SPI
    https://www.arduino.cc/reference/en/language/variables/utilities/progmem/
*/

// FastLED - Version: Latest 
#include <FastLED.h>

#include <avr/pgmspace.h>

#define DATA_PIN 11 //MOSI
#define CLOCK_PIN 13 //SCLK
#define NUM_LEDS 12


#define DEBUG 0


const uint8_t smiley[] PROGMEM = {
     160,72,164,160,72,164,160,72,164,0,160,232,0,160,232,0,160,232,0,160,232,0,160,232,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,160,72,164,160,72,164,160,72,164,160,72,164,236,28,36,236,28,36,236,28,36
    ,160,72,164,160,72,164,160,72,164,0,160,232,0,160,232,0,160,232,0,160,232,0,160,232,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,160,72,164,160,72,164,160,72,164,160,72,164,236,28,36,236,28,36,236,28,36
    ,160,72,164,160,72,164,160,72,164,0,160,232,0,160,232,0,160,232,0,160,232,0,160,232,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,160,72,164,160,72,164,160,72,164,160,72,164,236,28,36,236,28,36,236,28,36
    ,160,72,164,160,72,164,160,72,164,0,160,232,0,160,232,0,160,232,0,160,232,0,160,232,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,160,72,164,160,72,164,160,72,164,160,72,164,236,28,36,236,28,36,236,28,36
    ,160,72,164,160,72,164,160,72,164,0,160,232,0,160,232,0,160,232,0,160,232,0,160,232,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,160,72,164,160,72,164,160,72,164,160,72,164,236,28,36,236,28,36,236,28,36
    ,160,72,164,160,72,164,160,72,164,0,160,232,0,160,232,0,160,232,0,160,232,0,160,232,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,160,72,164,160,72,164,160,72,164,160,72,164,236,28,36,236,28,36,236,28,36
    ,160,72,164,160,72,164,160,72,164,0,160,232,0,160,232,0,160,232,0,160,232,0,160,232,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,160,72,164,160,72,164,160,72,164,160,72,164,236,28,36,236,28,36,236,28,36
    ,160,72,164,160,72,164,160,72,164,0,160,232,0,160,232,0,160,232,0,160,232,0,160,232,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,160,72,164,160,72,164,160,72,164,160,72,164,236,28,36,236,28,36,236,28,36
    ,160,72,164,160,72,164,160,72,164,0,160,232,0,160,232,0,160,232,0,160,232,0,160,232,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,160,72,164,160,72,164,160,72,164,160,72,164,236,28,36,236,28,36,236,28,36
    ,160,72,164,160,72,164,160,72,164,0,160,232,0,160,232,0,160,232,0,160,232,0,160,232,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,32,176,76,160,72,164,160,72,164,160,72,164,160,72,164,236,28,36,236,28,36,236,28,36
    ,160,72,164,160,72,164,160,72,164,0,160,232,0,160,232,0,160,232,0,160,232,0,160,232,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,236,28,36,236,28,36,236,28,36
    ,160,72,164,160,72,164,160,72,164,0,160,232,0,160,232,0,160,232,0,160,232,0,160,232,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,160,72,164,236,28,36,236,28,36,236,28,36
  };
const uint8_t scenery[] PROGMEM = {
    136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,4,84,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,236,28,36,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,4,84,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20
    ,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,4,84,20,4,84,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,236,28,36,136,0,20,4,84,20,4,84,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20
    ,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,4,84,20,4,84,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,236,28,36,236,28,36,236,28,36,136,0,20,136,0,20,4,84,20,4,84,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20
    ,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,4,84,20,4,84,20,4,84,20,4,84,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,236,28,36,136,0,20,136,0,20,136,0,20,4,84,20,4,84,20,4,84,20,4,84,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20
    ,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,4,84,20,4,84,20,4,84,20,4,84,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,236,28,36,236,28,36,236,28,36,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,252,200,12,252,200,12,252,200,12,252,200,12,252,200,12,252,200,12,252,200,12,252,200,12,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,236,28,36,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,4,84,20,4,84,20,4,84,20,4,84,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20
    ,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,4,84,20,4,84,20,4,84,20,4,84,20,4,84,20,4,84,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,236,28,36,136,0,20,136,0,20,136,0,20,252,200,12,252,200,12,252,200,12,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,200,12,252,200,12,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,4,84,20,4,84,20,4,84,20,4,84,20,4,84,20,4,84,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20
    ,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,4,84,20,4,84,20,4,84,20,4,84,20,4,84,20,4,84,20,136,0,20,136,0,20,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,252,200,12,252,200,12,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,200,12,252,200,12,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,4,84,20,4,84,20,4,84,20,4,84,20,4,84,20,4,84,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20
    ,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,184,120,84,184,120,84,136,0,20,136,0,20,136,0,20,136,0,20,236,28,36,236,28,36,236,28,36,136,0,20,136,0,20,136,0,20,136,0,20,252,200,12,252,200,12,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,200,12,252,200,12,136,0,20,136,0,20,236,28,36,236,28,36,236,28,36,136,0,20,184,120,84,184,120,84,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20,136,0,20

    ,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84

    ,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,188,148,80,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84,184,120,84
  };
const uint8_t sun[] PROGMEM = {
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,240,0,252,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,240,0,252,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,240,0,252,240,0,252,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,240,0,252,240,0,252,240,0,252,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,240,0,252,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    ,0,0,0,0,0,0,0,0,0,0,0,0,252,240,0,252,240,0,252,240,0,252,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,252,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,240,0,252,240,0,252,240,0,252,240,0,0,0,0,0,0,0,0,0,0,0,0,0
    ,0,0,0,0,0,0,0,0,0,252,200,12,252,200,12,252,200,12,252,200,12,252,240,0,252,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,200,12,252,200,12,252,200,12,252,200,12,252,200,12,252,200,12,252,200,12,252,200,12,252,200,12,252,200,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,200,12,252,240,0,252,240,0,252,200,12,252,200,12,252,200,12,252,200,12,252,200,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,200,12,252,240,0,252,240,0,252,200,12,252,200,12,252,200,12,252,200,12,0,0,0,0,0,0,0,0,0
    ,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,200,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0






  };

int brightness = 50;
byte currentButton;
byte lastButtonPressed;

CRGB leds[NUM_LEDS];

void setup() {
  delay(3000); // power-up safety delay
  //FastLED.addLeds<LPD8806,DATA_PIN,CLOCK_PIN>(leds,NUM_LEDS);
  FastLED.addLeds < LPD8806, BRG > (leds, NUM_LEDS); //brg configuration
  //FastLED.addLeds<LPD8806,11,13,BRG,DATA_RATE_MHZ(10)>(leds,NUM_LEDS); //to adjust clock speed
  Serial.begin(9600);
  FastLED.setBrightness(brightness);
}

void loop() {
  if (Serial.available()>0) {
    
    currentButton = Serial.read(); //gets incoming byte
    
    if (currentButton != 10 && currentButton != 11) {
      lastButtonPressed = currentButton;
    }
        Serial.print("lastButtonePressed:");
        Serial.println(lastButtonPressed);

    switch (currentButton) {
      //+ (volume up)
    case 10:
      brightness += 10;
      if (brightness >= 200) {
        brightness = 200; 
      }
      FastLED.setBrightness(brightness);
      brightnessAdjust(lastButtonPressed);
      break;
      //- (volume down)
    case 11:
      brightness -= 10;
      if (brightness <= 10) {
        brightness = 10;
      }
      FastLED.setBrightness(brightness);
      brightnessAdjust(lastButtonPressed);
      break;
      //0
    case 0:
      fill_solid(leds, NUM_LEDS, CRGB::Black);
      FastLED.show();
      delay(30);
      break;
      //1
    case 1:
      fill_solid(leds, NUM_LEDS, CRGB::DarkMagenta);
      FastLED.show();
      delay(30);
      break;
      //2
    case 2:
      fill_solid(leds, NUM_LEDS, CRGB::Green);
      FastLED.show();
      delay(30);
      break;
      //3
    case 3:
      fill_solid(leds, NUM_LEDS, CRGB::Blue);
      FastLED.show();
      delay(30);
      break;
      //4
    case 4:
      fill_solid(leds, NUM_LEDS, CRGB::Red);
      FastLED.show();
      delay(30);
      break;
      //5
    case 5:
      currentButton = 5;
      while (currentButton = 5) {
        //rainbowCycle(30, 6, 9);
        displayImage();
        if (Serial.available()>0) {
          if (currentButton != 5) {
            break;
          } else {
            //rainbowCycle(30, 6, 9);
            displayImage();
          }
        }
      }
      break;
      //6
    case 6:
      fill_solid(leds, NUM_LEDS, CRGB::DeepPink);
      FastLED.show();
      delay(30);
      break;
      //7
    case 7:
      fill_solid(leds, NUM_LEDS, CRGB::GhostWhite);
      FastLED.show();
      delay(30);
      break;
      //8
    case 8:
      fill_solid(leds, NUM_LEDS, CRGB::Yellow);
      FastLED.show();
      delay(30);
  //    displaySmiley();
      break;
      //9
    case 9:
      fill_rainbow(leds, NUM_LEDS, 0, 19);
      FastLED.show();
      delay(30);
      break;
    }
  }
}

void brightnessAdjust(int value) {
  switch (value) {
    //0
  case 0:
    fill_solid(leds, NUM_LEDS, CRGB::Black);
    FastLED.show();
    delay(30);
    break;
    //1
  case 1:
    fill_solid(leds, NUM_LEDS, CRGB::DarkMagenta);
    FastLED.show();
    delay(30);
    break;
    //2
  case 2:
    fill_solid(leds, NUM_LEDS, CRGB::Green);
    FastLED.show();
    delay(30);
    break;
    //3
  case 3:
    fill_solid(leds, NUM_LEDS, CRGB::Blue);
    FastLED.show();
    delay(30);
    break;
    //4
  case 4:
    fill_solid(leds, NUM_LEDS, CRGB::Red);
    FastLED.show();
    delay(30);
    break;
    //5
  case 5:
    currentButton = 5;
      while (currentButton = 5) {
        //rainbowCycle(30, 6, 9);
        displayImage();
        if (Serial.available()>0) {
          if (currentButton != 5) {
            break;
          } else {
            //rainbowCycle(30, 6, 9);
            displayImage();
          }
        }
      }
    break;
    //6
  case 6:
    fill_solid(leds, NUM_LEDS, CRGB::DeepPink);
    FastLED.show();
    delay(30);
    break;
    //7
  case 7:
    fill_solid(leds, NUM_LEDS, CRGB::GhostWhite);
    FastLED.show();
    delay(30);
    break;
    //8
  case 8:
    fill_solid(leds, NUM_LEDS, CRGB::Yellow);
    FastLED.show();
    delay(30);
    break;
    //9
  case 9:
    fill_rainbow(leds, NUM_LEDS, 0, 19);
    FastLED.show();
    delay(30);
    break;
  }
}

void rainbowCycle(int wait, int cycles, int dim) {

  for (int j = 0; j < 384 * 5; j++) {
    //Set RGB color of each LED
    for (int i = 0; i < NUM_LEDS; i++) {
      CRGB ledColor = (i, wheel(((i * 384 / NUM_LEDS) + j) % 384));
      leds[i] = ledColor;
    }
    FastLED.show();

  }
}

CRGB wheel(int WheelPos) {
  CRGB color;
  if (85 > WheelPos) {
    color.r = 127 - WheelPos % 128;
    color.g = WheelPos % 128;
    color.b = 0;
  } else if (170 > WheelPos) {
    color.g = 127 - WheelPos % 128;
    color.b = WheelPos % 128;
    color.r = 0;
  } else {
    color.b = 127 - WheelPos % 128;
    color.r = WheelPos % 128;
    color.g = 0;
  }
  return color;
}

void displayImage(){
  int width = 60;   //pixels
  int height = 12;  //pixels
  
  int d;     //element 51differential
  int r,g,b; //RGB values
  
  if(height > NUM_LEDS){height = NUM_LEDS;}   //prevents addressing to non-existing LED but breaks picture
  
  for(int row = 0; row<width; row++){         //for each row of image
    // for each column of image, updating entire row of LEDs = one vertical column of picture
    
    for(int col = height; col>0; col--){ 
      /*update each rgb*/
      //uint8_t d = (row*height*3)+(col*3); //if values stored wrt column (Vertical)
      d = (row*3)+(col*width*3); //if values stored wrt row (Horizontal)
      r =  pgm_read_byte_near(sun + d + 0);
      g =  pgm_read_byte_near(sun + d + 1);
      b =  pgm_read_byte_near(sun + d + 2);
      
      if(DEBUG){
        Serial.print("rgb: ");
        Serial.print(pgm_read_byte_near(sun + d + 0) );
        Serial.print(pgm_read_byte_near(sun + d + 1) );
        Serial.print(pgm_read_byte_near(sun + d + 2) );
        
        Serial.print("   d: ");
        Serial.println(d);
      }
      leds[(height-1)-(col-1)].setRGB(r,g,b);
      FastLED.show();
    }
    if(DEBUG){
      Serial.println();
      delay(5000);
    }
  }
}
